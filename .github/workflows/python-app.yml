# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    concurrency:
      group: builld
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3
      uses: actions/setup-python@v3
      with:
        python-version: "3.10.6"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
        version: 1.1.12
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Add poetry to PATH
      if: matrix.os == 'windows-latest'
      run: $env:Path += ';C:\Users\runneradmin\.local\bin'
      
    - name: Handle cache
      id: cached-venv
      uses: actions/cache@v3
      with:
        path: |
          ~/.local
          ${{ github.workspace }}/example-app/.venv
        key: ${{ runner.os }}-venv
      
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
        

  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    concurrency:
      group: rest
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.6"
          
      - name: Handle cache
        id: cached-venv
        uses: actions/cache@v3
        with:
          path: |
            ~/.local
            ${{ github.workspace }}/example-app/.venv
          key: ${{ runner.os }}-venv
          
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.1.12
          virtualenvs-create: false
          
      - name: Add poetry to PATH
        if: matrix.os == 'windows-latest'
        run: $env:Path += ';C:\Users\runneradmin\.local\bin'
          
      - name: Lint
        run: |
          source $VENV
          poetry run task lint
        
      - name: Formatter
        run: |
          source $VENV
          poetry run task formatter
        
      - name: Security
        run: |
          source $VENV
          poetry run task security
        
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    concurrency:
      group: rest
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.6"
          
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.1.12
          virtualenvs-create: false
          
      - name: Add poetry to PATH
        if: matrix.os == 'windows-latest'
        run: $env:Path += ';C:\Users\runneradmin\.local\bin'
          
      - name: Handle cache
        id: cached-venv
        uses: actions/cache@v3
        with:
          path: |
            ~/.local
            ${{ github.workspace }}/example-app/.venv
          key: ${{ runner.os }}-venv
      
      - name: Unit tests
        run: |
          source $VENV
          poetry run task test
