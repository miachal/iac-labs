# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
        version: 1.1.12
        virtualenvs-create: true
        virtualenvs-in-project: true
      
    - name: Handle cache
      id: cached-venv
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: ${{ runner.os }}-venv
      
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
        

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: Handle cache
        id: cached-venv
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-venv
          
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.1.12
          virtualenvs-create: false
          
      - name: debug
        run: |
          head -1 /usr/bin/poetry
          python -V
          ln -s /usr/bin/python3 /usr/bin/python
          
      - name: Lint
        run: |
          source ~/.local/venv/bin/activate
          poetry run task lint -vvv
        
      - name: Formatter
        run: |
          source ~/.local/venv/bin/activate
          poetry run task formatter
        
      - name: Security
        run: |
          source ~/.local/venv/bin/activate
          poetry run task security
        
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.1.12
          virtualenvs-create: false
          
      - name: Handle cache
        id: cached-venv
        uses: actions/cache@v3
        with:
          path: ~/.cache/venv
          key: ${{ runner.os }}-venv
          
      - name: Load venv
        run: source ~/.local/venv/bin/activate
      
      - name: Unit tests
        run: poetry run task test
